<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /w9D3cnLSKC92wAAAABJRU5ErkJggg==
</value>
  </data>
</root>